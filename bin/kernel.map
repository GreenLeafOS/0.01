
Allocating common symbols
Common symbol       size              file

gdt_table           0x100             bin/arch.o
idt_ptr             0x6               bin/arch.o
kernel_reenter      0x4               bin/micro-kernel.o
handle_ret_addr     0x4               bin/micro-kernel.o
thread_table        0x80              bin/micro-kernel.o
tss                 0x6c              bin/arch.o
thread_queue_ready  0x8               bin/micro-kernel.o
thread_queue_sleep  0x8               bin/micro-kernel.o
handle_err_code     0x4               bin/micro-kernel.o
kernel_stack_top    0x4               bin/micro-kernel.o
thread_run          0x4               bin/micro-kernel.o
gdt_ptr             0x6               bin/arch.o
thread_run_stack_top
                    0x4               bin/micro-kernel.o
tss_sel             0x2               bin/arch.o
ldt_ptr             0x6               bin/arch.o
idt_table           0x800             bin/arch.o
ldt_table           0x40              bin/arch.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 bin/arch.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/micro-kernel.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/lib.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0x100000
Address of section memory set to 0x30000
LOAD bin/arch.o
LOAD bin/micro-kernel.o
LOAD bin/lib.o
                0x0000000008048000                PROVIDE (__executable_start, 0x8048000)
                0x0000000008048094                . = (0x8048000 + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000000000000        0x0 bin/arch.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                0x0000000008048094                PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
 .rel.iplt      0x0000000000000000        0x0 bin/arch.o
                0x0000000008048094                PROVIDE (__rel_iplt_end, .)

.init
 *(.init)

.plt            0x00000000080480a0        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000000000000        0x0 bin/arch.o

.text           0x0000000000100000     0x2493
 *(.text.unlikely .text.*_unlikely)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000100000      0xa4e bin/arch.o
                0x0000000000100000                _start
                0x000000000010003c                print
                0x000000000010007c                desc_init
                0x0000000000100104                desc_create
                0x0000000000100147                gdt_get_sel
                0x000000000010016c                ldt_get_sel
                0x0000000000100191                gate_init
                0x00000000001001f4                gate_create
                0x0000000000100244                gdt_add
                0x000000000010029e                gdt_remove
                0x00000000001002c1                gdt_set
                0x00000000001002f2                gdt_get
                0x0000000000100318                gdt_load
                0x0000000000100350                ldt_init
                0x0000000000100355                ldt_add
                0x00000000001003af                ldt_remove
                0x00000000001003d2                ldt_set
                0x0000000000100403                ldt_get
                0x0000000000100429                ldt_load
                0x0000000000100460                idt_set
                0x000000000010047c                idt_get
                0x000000000010049a                idt_init_call
                0x00000000001004f6                idt_init_intr
                0x0000000000100552                idt_init_trap
                0x00000000001005ae                idt_init_task
                0x000000000010060a                idt_load
                0x0000000000100640                page_link
                0x00000000001006c1                page_directory_load
                0x00000000001006d8                mem_page_busy
                0x0000000000100730                mem_page_free
                0x000000000010078a                mem_page_getfree
                0x0000000000100838                mem_page_alloc
                0x0000000000100948                tss_load
                0x000000000010097e                init_8259A
 *fill*         0x0000000000100a4e        0x2 90909090
 .text          0x0000000000100a50     0x17a4 bin/micro-kernel.o
                0x0000000000100a50                save
                0x0000000000100a9f                restart
                0x0000000000100ad0                hwint00
                0x0000000000100af0                hwint01
                0x0000000000100b10                hwint02
                0x0000000000100b30                hwint03
                0x0000000000100b50                hwint04
                0x0000000000100b70                hwint05
                0x0000000000100b90                hwint06
                0x0000000000100bb0                hwint07
                0x0000000000100bd0                hwint08
                0x0000000000100c00                hwint09
                0x0000000000100c30                hwint10
                0x0000000000100c60                hwint11
                0x0000000000100c90                hwint12
                0x0000000000100cc0                hwint13
                0x0000000000100cf0                hwint14
                0x0000000000100d20                hwint15
                0x0000000000100d43                divide_error
                0x0000000000100d65                single_step_exception
                0x0000000000100d87                nmi
                0x0000000000100da9                breakpoint_exception
                0x0000000000100dcb                overflow
                0x0000000000100ded                bounds_check
                0x0000000000100e0f                inval_opcode
                0x0000000000100e31                copr_not_available
                0x0000000000100e53                double_fault
                0x0000000000100e73                copr_seg_overrun
                0x0000000000100e95                inval_tss
                0x0000000000100eb5                segment_not_present
                0x0000000000100ed5                stack_exception
                0x0000000000100ef5                general_protection
                0x0000000000100f15                page_fault
                0x0000000000100f35                copr_error
                0x0000000000100f58                wait
                0x0000000000100f9d                exit
                0x0000000000100fcc                kernel_main
                0x000000000010100e                kernel_main_thread
                0x0000000000101050                testA
                0x0000000000101093                testB
                0x00000000001010d6                testC
                0x0000000000101106                main_thread_create
                0x0000000000101298                handle_intr
                0x00000000001012d9                handler_exception
                0x0000000000101330                mem_init
                0x000000000010142a                page_init
                0x0000000000101558                gdt_init
                0x000000000010167d                tss_init
                0x0000000000101720                idt_init
                0x0000000000101bd3                post
                0x0000000000101c71                recv
                0x0000000000101da0                thread_init
                0x0000000000101df3                thread_set
                0x0000000000101e33                thread_wait
                0x0000000000101e62                thread_exit
                0x0000000000101ee5                thread_schedule
                0x0000000000102037                create
                0x00000000001020bf                ready
                0x00000000001020f5                sleep
                0x0000000000102136                wake
                0x0000000000102177                kill
 .text          0x00000000001021f4      0x29f bin/lib.o
                0x00000000001021f4                memset
                0x000000000010220c                memcpy
                0x0000000000102244                list_init
                0x0000000000102260                list_add
                0x00000000001022ac                list_addtail
                0x00000000001022fb                list_search
                0x0000000000102344                list_insert
                0x00000000001023ae                list_unlink
                0x00000000001023e7                list_delete
                0x0000000000102421                list_empty
 *(.gnu.warning)

.fini
 *(.fini)
                0x0000000000102493                PROVIDE (__etext, .)
                0x0000000000102493                PROVIDE (_etext, .)
                0x0000000000102493                PROVIDE (etext, .)

.rodata         0x00000000001024a0      0x100
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000001024a0      0x100 bin/micro-kernel.o
                0x00000000001024e0                msg_priority_table

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame       0x00000000001025a0      0x97c
 *(.eh_frame)
 .eh_frame      0x00000000001025a0      0x480 bin/arch.o
                                        0x528 (size before relaxing)
 .eh_frame      0x0000000000102a20      0x3dc bin/micro-kernel.o
                                        0x454 (size before relaxing)
 .eh_frame      0x0000000000102dfc      0x120 bin/lib.o
                                        0x150 (size before relaxing)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x0000000000102f1c                . = (ALIGN (0x1000) - ((0x1000 - .) & 0xfff))
                0x0000000000103000                . = DATA_SEGMENT_ALIGN (0x1000, 0x1000)

.eh_frame
 *(.eh_frame)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000103000        0x0
                0x0000000000103000                PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                0x0000000000103000                PROVIDE (__preinit_array_end, .)

.init_array     0x0000000000103000        0x0
                0x0000000000103000                PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                0x0000000000103000                PROVIDE (__init_array_end, .)

.fini_array     0x0000000000103000        0x0
                0x0000000000103000                PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                0x0000000000103000                PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)
 *(.igot)
                0x0000000000103000                . = DATA_SEGMENT_RELRO_END (., 0xc)

.got.plt        0x0000000000103000        0x0
 *(.got.plt)
 *(.igot.plt)
 .igot.plt      0x0000000000000000        0x0 bin/arch.o

.data           0x0000000000103000        0x0
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000103000        0x0 bin/arch.o
 .data          0x0000000000103000        0x0 bin/micro-kernel.o
 .data          0x0000000000103000        0x0 bin/lib.o

.data1
 *(.data1)
                0x0000000000103000                _edata = .
                0x0000000000103000                PROVIDE (edata, .)
                0x0000000000103000                __bss_start = .

.bss            0x0000000000103000      0xac0
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000103000        0x4 bin/arch.o
 .bss           0x0000000000103004        0x0 bin/micro-kernel.o
 .bss           0x0000000000103004        0x0 bin/lib.o
 *(COMMON)
 *fill*         0x0000000000103004       0x1c 00
 COMMON         0x0000000000103020      0x9e0 bin/arch.o
                0x0000000000103020                gdt_table
                0x0000000000103120                idt_ptr
                0x0000000000103140                tss
                0x00000000001031ac                gdt_ptr
                0x00000000001031b2                tss_sel
                0x00000000001031b4                ldt_ptr
                0x00000000001031c0                idt_table
                0x00000000001039c0                ldt_table
 COMMON         0x0000000000103a00       0xc0 bin/micro-kernel.o
                0x0000000000103a00                kernel_reenter
                0x0000000000103a04                handle_ret_addr
                0x0000000000103a20                thread_table
                0x0000000000103aa0                thread_queue_ready
                0x0000000000103aa8                thread_queue_sleep
                0x0000000000103ab0                handle_err_code
                0x0000000000103ab4                kernel_stack_top
                0x0000000000103ab8                thread_run
                0x0000000000103abc                thread_run_stack_top
                0x0000000000103ac0                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x0000000000103ac0                . = ALIGN (0x4)
                0x0000000000103ac0                . = ALIGN (0x4)
                0x0000000000103ac0                _end = .
                0x0000000000103ac0                PROVIDE (end, .)
                0x0000000000103ac0                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2a
 *(.comment)
 .comment       0x0000000000000000       0x2a bin/arch.o
                                        0x158 (size before relaxing)
 .comment       0x0000000000000000      0x102 bin/micro-kernel.o
 .comment       0x0000000000000000       0x56 bin/lib.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(bin/kernel.bin elf32-i386)

memory          0x0000000000030000      0x210
 memory         0x0000000000030000      0x210 bin/arch.o
                0x0000000000030000                mem_info
                0x0000000000030200                mem_mcr_number
                0x0000000000030204                mem_size
                0x0000000000030208                mem_used_map
                0x000000000003020c                mem_used_map_max

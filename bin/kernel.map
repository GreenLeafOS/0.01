
Allocating common symbols
Common symbol       size              file

gdt_table           0x100             bin/arch.o
idt_ptr             0x6               bin/arch.o
kernel_reenter      0x4               bin/micro-kernel.o
msg_reg_table       0x1200            bin/micro-kernel.o
thread_sleep_id     0x4               bin/micro-kernel.o
thread_table        0x80              bin/micro-kernel.o
tss                 0x6c              bin/arch.o
thread_queue_ready  0x8               bin/micro-kernel.o
ret_addr            0x4               bin/micro-kernel.o
err_code            0x4               bin/micro-kernel.o
thread_queue_sleep  0x8               bin/micro-kernel.o
thread_run          0x4               bin/micro-kernel.o
gdt_ptr             0x6               bin/arch.o
thread_run_stack_top
                    0x4               bin/micro-kernel.o
thread_table_data   0x4               bin/micro-kernel.o
kernel_stack_p      0x4               bin/micro-kernel.o
tss_sel             0x2               bin/arch.o
ldt_ptr             0x6               bin/arch.o
idt_table           0x800             bin/arch.o
ldt_table           0x40              bin/arch.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 bin/arch.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/micro-kernel.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/lib.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0x100000
Address of section memory set to 0x15000
LOAD bin/arch.o
LOAD bin/micro-kernel.o
LOAD bin/lib.o
                0x0000000008048000                PROVIDE (__executable_start, 0x8048000)
                0x0000000008048094                . = (0x8048000 + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000000000000        0x0 bin/arch.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 .rel.data      0x0000000000000000        0x0 bin/arch.o
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                0x0000000008048094                PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
 .rel.iplt      0x0000000000000000        0x0 bin/arch.o
                0x0000000008048094                PROVIDE (__rel_iplt_end, .)

.init
 *(.init)

.plt            0x00000000080480a0        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000000000000        0x0 bin/arch.o

.text           0x0000000000100000     0x247c
 *(.text.unlikely .text.*_unlikely)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000100000      0xe1a bin/arch.o
                0x0000000000100000                _start
                0x000000000010003c                print
                0x000000000010007c                desc_init
                0x0000000000100104                desc_create
                0x0000000000100147                gdt_get_sel
                0x000000000010016c                ldt_get_sel
                0x0000000000100191                gate_init
                0x00000000001001f4                gate_create
                0x0000000000100244                gdt_init
                0x0000000000100369                gdt_add
                0x00000000001003c3                gdt_remove
                0x00000000001003e6                gdt_set
                0x0000000000100417                gdt_get
                0x000000000010043d                gdt_load
                0x0000000000100474                ldt_init
                0x0000000000100479                ldt_add
                0x00000000001004d3                ldt_remove
                0x00000000001004f6                ldt_set
                0x0000000000100527                ldt_get
                0x000000000010054d                ldt_load
                0x0000000000100584                idt_set
                0x00000000001005a0                idt_get
                0x00000000001005be                idt_init_call
                0x000000000010061a                idt_init_intr
                0x0000000000100676                idt_init_trap
                0x00000000001006d2                idt_init_task
                0x000000000010072e                idt_load
                0x0000000000100764                page_link
                0x00000000001007e5                page_init
                0x0000000000100913                page_directory_load
                0x000000000010092c                mem_init
                0x0000000000100a26                mem_page_busy
                0x0000000000100a7e                mem_page_free
                0x0000000000100ad8                mem_page_getfree
                0x0000000000100b86                mem_page_alloc
                0x0000000000100c98                tss_init
                0x0000000000100d15                tss_load
                0x0000000000100d4a                init_8259A
 *fill*         0x0000000000100e1a        0x6 90909090
 .text          0x0000000000100e20     0x1424 bin/micro-kernel.o
                0x0000000000100e20                divide_error
                0x0000000000100e48                single_step_exception
                0x0000000000100e70                nmi
                0x0000000000100e98                breakpoint_exception
                0x0000000000100ec0                overflow
                0x0000000000100ee8                bounds_check
                0x0000000000100f10                inval_opcode
                0x0000000000100f38                copr_not_available
                0x0000000000100f60                double_fault
                0x0000000000100f86                copr_seg_overrun
                0x0000000000100fae                inval_tss
                0x0000000000100fd4                segment_not_present
                0x0000000000100ffa                stack_exception
                0x0000000000101020                general_protection
                0x0000000000101046                page_fault
                0x000000000010106c                copr_error
                0x00000000001010a0                hwint00
                0x00000000001010c0                hwint01
                0x00000000001010e0                hwint02
                0x0000000000101100                hwint03
                0x0000000000101120                hwint04
                0x0000000000101140                hwint05
                0x0000000000101160                hwint06
                0x0000000000101180                hwint07
                0x00000000001011a0                hwint08
                0x00000000001011d0                hwint09
                0x0000000000101200                hwint10
                0x0000000000101230                hwint11
                0x0000000000101260                hwint12
                0x0000000000101290                hwint13
                0x00000000001012c0                hwint14
                0x00000000001012f0                hwint15
                0x0000000000101314                save
                0x0000000000101383                thread_sleep_self
                0x00000000001013cc                KernelMain
                0x00000000001014b5                mod_load
                0x000000000010162f                thread_create
                0x0000000000101847                thread_sleep
                0x00000000001018a0                thread_wake
                0x000000000010191e                thread_kill
                0x000000000010199b                thread_schedule
                0x0000000000101b80                msg_send
                0x0000000000101c72                msg_handle
                0x0000000000101cf1                msg_register
                0x0000000000101d3b                msg_recv
                0x0000000000101dc8                msg_post
                0x0000000000101e20                idt_init
                0x0000000000102191                intr_handle
                0x00000000001021ed                exception_handler
 .text          0x0000000000102244      0x238 bin/lib.o
                0x0000000000102244                memcpy
                0x000000000010227c                list_init
                0x0000000000102298                list_add
                0x00000000001022e4                list_search
                0x000000000010232d                list_insert
                0x0000000000102397                list_unlink
                0x00000000001023d0                list_delete
                0x000000000010240a                list_empty
 *(.gnu.warning)

.fini
 *(.fini)
                0x000000000010247c                PROVIDE (__etext, .)
                0x000000000010247c                PROVIDE (_etext, .)
                0x000000000010247c                PROVIDE (etext, .)

.rodata         0x0000000000102480       0xe0
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x0000000000102480       0xe0 bin/micro-kernel.o
                0x00000000001024a0                msg_priority_table

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame       0x0000000000102560      0x924
 *(.eh_frame)
 .eh_frame      0x0000000000102560      0x508 bin/arch.o
                                        0x5b0 (size before relaxing)
 .eh_frame      0x0000000000102a68      0x31c bin/micro-kernel.o
                                        0x394 (size before relaxing)
 .eh_frame      0x0000000000102d84      0x100 bin/lib.o
                                        0x130 (size before relaxing)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x0000000000102e84                . = (ALIGN (0x1000) - ((0x1000 - .) & 0xfff))
                0x0000000000103000                . = DATA_SEGMENT_ALIGN (0x1000, 0x1000)

.eh_frame
 *(.eh_frame)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000103000        0x0
                0x0000000000103000                PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                0x0000000000103000                PROVIDE (__preinit_array_end, .)

.init_array     0x0000000000103000        0x0
                0x0000000000103000                PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                0x0000000000103000                PROVIDE (__init_array_end, .)

.fini_array     0x0000000000103000        0x0
                0x0000000000103000                PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                0x0000000000103000                PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)
 *(.igot)
                0x0000000000103000                . = DATA_SEGMENT_RELRO_END (., 0xc)

.got.plt        0x0000000000103000        0x0
 *(.got.plt)
 *(.igot.plt)
 .igot.plt      0x0000000000000000        0x0 bin/arch.o

.data           0x0000000000103000       0x18
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000103000        0x0 bin/arch.o
 .data          0x0000000000103000       0x18 bin/micro-kernel.o
                0x0000000000103000                mod_table_data
                0x000000000010300c                msg_stack
 .data          0x0000000000103018        0x0 bin/lib.o

.data1
 *(.data1)
                0x0000000000103018                _edata = .
                0x0000000000103018                PROVIDE (edata, .)
                0x0000000000103018                __bss_start = .

.bss            0x0000000000103020     0x1d68
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000103020        0x4 bin/arch.o
 *fill*         0x0000000000103024       0x1c 00
 .bss           0x0000000000103040       0x80 bin/micro-kernel.o
                0x0000000000103040                mod_table
 .bss           0x00000000001030c0        0x0 bin/lib.o
 *(COMMON)
 COMMON         0x00000000001030c0      0x9e0 bin/arch.o
                0x00000000001030c0                gdt_table
                0x00000000001031c0                idt_ptr
                0x00000000001031e0                tss
                0x000000000010324c                gdt_ptr
                0x0000000000103252                tss_sel
                0x0000000000103254                ldt_ptr
                0x0000000000103260                idt_table
                0x0000000000103a60                ldt_table
 COMMON         0x0000000000103aa0     0x12e8 bin/micro-kernel.o
                0x0000000000103aa0                kernel_reenter
                0x0000000000103ac0                msg_reg_table
                0x0000000000104cc0                thread_sleep_id
                0x0000000000104ce0                thread_table
                0x0000000000104d60                thread_queue_ready
                0x0000000000104d68                ret_addr
                0x0000000000104d6c                err_code
                0x0000000000104d70                thread_queue_sleep
                0x0000000000104d78                thread_run
                0x0000000000104d7c                thread_run_stack_top
                0x0000000000104d80                thread_table_data
                0x0000000000104d84                kernel_stack_p
                0x0000000000104d88                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x0000000000104d88                . = ALIGN (0x4)
                0x0000000000104d88                . = ALIGN (0x4)
                0x0000000000104d88                _end = .
                0x0000000000104d88                PROVIDE (end, .)
                0x0000000000104d88                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2a
 *(.comment)
 .comment       0x0000000000000000       0x2a bin/arch.o
                                        0x158 (size before relaxing)
 .comment       0x0000000000000000      0x102 bin/micro-kernel.o
 .comment       0x0000000000000000       0x56 bin/lib.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(bin/kernel.bin elf32-i386)

memory          0x0000000000015000      0x210
 memory         0x0000000000015000      0x210 bin/arch.o
                0x0000000000015000                mem_info
                0x0000000000015200                mem_mcr_number
                0x0000000000015204                mem_size
                0x0000000000015208                mem_used_map
                0x000000000001520c                mem_used_map_max


Allocating common symbols
Common symbol       size              file

gdt_table           0x100             bin/arch.o
idt_ptr             0x6               bin/arch.o
msg_reg_table       0x1200            bin/micro-kernel.o
thread_table        0x80              bin/micro-kernel.o
tss                 0x6c              bin/arch.o
thread_queue_ready  0x8               bin/micro-kernel.o
thread_queue_sleep  0x8               bin/micro-kernel.o
thread_run          0x4               bin/micro-kernel.o
gdt_ptr             0x6               bin/arch.o
thread_table_data   0x4               bin/micro-kernel.o
tss_sel             0x2               bin/arch.o
ldt_ptr             0x6               bin/arch.o
idt_table           0x800             bin/arch.o
ldt_table           0x40              bin/arch.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 bin/micro-kernel.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/arch.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/lib.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0x100000
Address of section memory set to 0x15000
LOAD bin/micro-kernel.o
LOAD bin/arch.o
LOAD bin/lib.o
                0x0000000008048000                PROVIDE (__executable_start, 0x8048000)
                0x0000000008048094                . = (0x8048000 + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000000000000        0x0 bin/micro-kernel.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 .rel.data      0x0000000000000000        0x0 bin/micro-kernel.o
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                0x0000000008048094                PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
 .rel.iplt      0x0000000000000000        0x0 bin/micro-kernel.o
                0x0000000008048094                PROVIDE (__rel_iplt_end, .)

.init
 *(.init)

.plt            0x00000000080480a0        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000000000000        0x0 bin/micro-kernel.o

.text           0x0000000000100000     0x14cd
 *(.text.unlikely .text.*_unlikely)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000100000      0x4e0 bin/micro-kernel.o
                0x0000000000100000                KernelMain
                0x000000000010007d                mod_load
                0x000000000010018d                thread_create
                0x0000000000100260                thread_sleep
                0x00000000001002de                thread_wake
                0x000000000010033e                thread_kill
                0x000000000010034d                thread_schedule
                0x00000000001003c9                msg_send
                0x0000000000100408                msg_handle
                0x0000000000100487                msg_register
                0x00000000001004d1                msg_recv
                0x00000000001004db                msg_post
 .text          0x00000000001004e0      0xe1e bin/arch.o
                0x00000000001004e0                _start
                0x0000000000100514                print
                0x0000000000100554                desc_init
                0x00000000001005dc                desc_create
                0x000000000010061f                gdt_get_sel
                0x0000000000100644                ldt_get_sel
                0x0000000000100669                gate_init
                0x00000000001006cc                gate_create
                0x000000000010071c                gdt_init
                0x0000000000100841                gdt_add
                0x000000000010089b                gdt_remove
                0x00000000001008be                gdt_set
                0x00000000001008ef                gdt_get
                0x0000000000100915                gdt_load
                0x000000000010094c                ldt_init
                0x0000000000100951                ldt_add
                0x00000000001009ab                ldt_remove
                0x00000000001009ce                ldt_set
                0x00000000001009ff                ldt_get
                0x0000000000100a25                ldt_load
                0x0000000000100a5c                idt_init
                0x0000000000100a69                idt_set
                0x0000000000100a85                idt_get
                0x0000000000100aa3                idt_init_call
                0x0000000000100aff                idt_init_intr
                0x0000000000100b5b                idt_init_trap
                0x0000000000100bb7                idt_init_task
                0x0000000000100c13                idt_load
                0x0000000000100c48                page_link
                0x0000000000100cc9                page_init
                0x0000000000100df7                page_directory_load
                0x0000000000100e10                mem_init
                0x0000000000100f0a                mem_page_busy
                0x0000000000100f62                mem_page_free
                0x0000000000100fbc                mem_page_getfree
                0x000000000010106a                mem_page_alloc
                0x000000000010117c                tss_init
                0x00000000001011f9                tss_load
                0x000000000010122e                init_8259A
 *fill*         0x00000000001012fe        0x2 90909090
 .text          0x0000000000101300      0x1cd bin/lib.o
                0x0000000000101300                memcpy
                0x0000000000101338                list_init
                0x0000000000101350                list_add
                0x00000000001013b7                list_search
                0x00000000001013eb                list_insert
                0x0000000000101449                list_unlink
                0x0000000000101481                list_delete
                0x00000000001014bb                list_empty
 *(.gnu.warning)

.fini
 *(.fini)
                0x00000000001014cd                PROVIDE (__etext, .)
                0x00000000001014cd                PROVIDE (_etext, .)
                0x00000000001014cd                PROVIDE (etext, .)

.rodata
 *(.rodata .rodata.* .gnu.linkonce.r.*)

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame       0x00000000001014d0      0x854
 *(.eh_frame)
 .eh_frame      0x00000000001014d0      0x244 bin/micro-kernel.o
                                        0x28c (size before relaxing)
 .eh_frame      0x0000000000101714      0x510 bin/arch.o
                                        0x5d0 (size before relaxing)
 .eh_frame      0x0000000000101c24      0x100 bin/lib.o
                                        0x130 (size before relaxing)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x0000000000101d24                . = (ALIGN (0x1000) - ((0x1000 - .) & 0xfff))
                0x0000000000102000                . = DATA_SEGMENT_ALIGN (0x1000, 0x1000)

.eh_frame
 *(.eh_frame)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000102000        0x0
                0x0000000000102000                PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                0x0000000000102000                PROVIDE (__preinit_array_end, .)

.init_array     0x0000000000102000        0x0
                0x0000000000102000                PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                0x0000000000102000                PROVIDE (__init_array_end, .)

.fini_array     0x0000000000102000        0x0
                0x0000000000102000                PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                0x0000000000102000                PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)
 *(.igot)
                0x0000000000102000                . = DATA_SEGMENT_RELRO_END (., 0xc)

.got.plt        0x0000000000102000        0x0
 *(.got.plt)
 *(.igot.plt)
 .igot.plt      0x0000000000000000        0x0 bin/micro-kernel.o

.data           0x0000000000102000       0x18
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000102000       0x18 bin/micro-kernel.o
                0x0000000000102000                mod_table_data
                0x000000000010200c                msg_stack
 .data          0x0000000000102018        0x0 bin/arch.o
 .data          0x0000000000102018        0x0 bin/lib.o

.data1
 *(.data1)
                0x0000000000102018                _edata = .
                0x0000000000102018                PROVIDE (edata, .)
                0x0000000000102018                __bss_start = .

.bss            0x0000000000102020     0x1d20
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000102020       0x80 bin/micro-kernel.o
                0x0000000000102020                mod_table
 .bss           0x00000000001020a0        0x4 bin/arch.o
 .bss           0x00000000001020a4        0x0 bin/lib.o
 *(COMMON)
 *fill*         0x00000000001020a4       0x1c 00
 COMMON         0x00000000001020c0     0x1298 bin/micro-kernel.o
                0x00000000001020c0                msg_reg_table
                0x00000000001032c0                thread_table
                0x0000000000103340                thread_queue_ready
                0x0000000000103348                thread_queue_sleep
                0x0000000000103350                thread_run
                0x0000000000103354                thread_table_data
 *fill*         0x0000000000103358        0x8 00
 COMMON         0x0000000000103360      0x9e0 bin/arch.o
                0x0000000000103360                gdt_table
                0x0000000000103460                idt_ptr
                0x0000000000103480                tss
                0x00000000001034ec                gdt_ptr
                0x00000000001034f2                tss_sel
                0x00000000001034f4                ldt_ptr
                0x0000000000103500                idt_table
                0x0000000000103d00                ldt_table
                0x0000000000103d40                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x0000000000103d40                . = ALIGN (0x4)
                0x0000000000103d40                . = ALIGN (0x4)
                0x0000000000103d40                _end = .
                0x0000000000103d40                PROVIDE (end, .)
                0x0000000000103d40                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2a
 *(.comment)
 .comment       0x0000000000000000       0x2a bin/micro-kernel.o
                                         0xac (size before relaxing)
 .comment       0x0000000000000000      0x158 bin/arch.o
 .comment       0x0000000000000000       0x56 bin/lib.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(bin/kernel.bin elf32-i386)

memory          0x0000000000015000      0x210
 memory         0x0000000000015000      0x210 bin/arch.o
                0x0000000000015000                mem_info
                0x0000000000015200                mem_mcr_number
                0x0000000000015204                mem_size
                0x0000000000015208                mem_used_map
                0x000000000001520c                mem_used_map_max

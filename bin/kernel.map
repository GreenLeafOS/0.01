
Allocating common symbols
Common symbol       size              file

gdt_table           0x100             bin/arch.o
idt_ptr             0x6               bin/arch.o
kernel_reenter      0x4               bin/micro-kernel.o
msg_reg_table       0x1200            bin/micro-kernel.o
thread_sleep_id     0x4               bin/micro-kernel.o
thread_table        0x80              bin/micro-kernel.o
tss                 0x6c              bin/arch.o
thread_queue_ready  0x8               bin/micro-kernel.o
ret_addr            0x4               bin/micro-kernel.o
err_code            0x4               bin/micro-kernel.o
thread_queue_sleep  0x8               bin/micro-kernel.o
thread_run          0x4               bin/micro-kernel.o
gdt_ptr             0x6               bin/arch.o
thread_run_stack_top
                    0x4               bin/micro-kernel.o
thread_table_data   0x4               bin/micro-kernel.o
kernel_stack_p      0x4               bin/micro-kernel.o
tss_sel             0x2               bin/arch.o
ldt_ptr             0x6               bin/arch.o
idt_table           0x800             bin/arch.o
ldt_table           0x40              bin/arch.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 bin/arch.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/micro-kernel.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/lib.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0x100000
Address of section memory set to 0x30000
LOAD bin/arch.o
LOAD bin/micro-kernel.o
LOAD bin/lib.o
                0x0000000008048000                PROVIDE (__executable_start, 0x8048000)
                0x0000000008048094                . = (0x8048000 + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000000000000        0x0 bin/arch.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 .rel.data      0x0000000000000000        0x0 bin/arch.o
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                0x0000000008048094                PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
 .rel.iplt      0x0000000000000000        0x0 bin/arch.o
                0x0000000008048094                PROVIDE (__rel_iplt_end, .)

.init
 *(.init)

.plt            0x00000000080480a0        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000000000000        0x0 bin/arch.o

.text           0x0000000000100000     0x26d8
 *(.text.unlikely .text.*_unlikely)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000100000      0xa4e bin/arch.o
                0x0000000000100000                _start
                0x000000000010003c                print
                0x000000000010007c                desc_init
                0x0000000000100104                desc_create
                0x0000000000100147                gdt_get_sel
                0x000000000010016c                ldt_get_sel
                0x0000000000100191                gate_init
                0x00000000001001f4                gate_create
                0x0000000000100244                gdt_add
                0x000000000010029e                gdt_remove
                0x00000000001002c1                gdt_set
                0x00000000001002f2                gdt_get
                0x0000000000100318                gdt_load
                0x0000000000100350                ldt_init
                0x0000000000100355                ldt_add
                0x00000000001003af                ldt_remove
                0x00000000001003d2                ldt_set
                0x0000000000100403                ldt_get
                0x0000000000100429                ldt_load
                0x0000000000100460                idt_set
                0x000000000010047c                idt_get
                0x000000000010049a                idt_init_call
                0x00000000001004f6                idt_init_intr
                0x0000000000100552                idt_init_trap
                0x00000000001005ae                idt_init_task
                0x000000000010060a                idt_load
                0x0000000000100640                page_link
                0x00000000001006c1                page_directory_load
                0x00000000001006d8                mem_page_busy
                0x0000000000100730                mem_page_free
                0x000000000010078a                mem_page_getfree
                0x0000000000100838                mem_page_alloc
                0x0000000000100948                tss_load
                0x000000000010097e                init_8259A
 *fill*         0x0000000000100a4e        0x2 90909090
 .text          0x0000000000100a50     0x1a50 bin/micro-kernel.o
                0x0000000000100a50                divide_error
                0x0000000000100a78                single_step_exception
                0x0000000000100aa0                nmi
                0x0000000000100ac8                breakpoint_exception
                0x0000000000100af0                overflow
                0x0000000000100b18                bounds_check
                0x0000000000100b40                inval_opcode
                0x0000000000100b68                copr_not_available
                0x0000000000100b90                double_fault
                0x0000000000100bb6                copr_seg_overrun
                0x0000000000100bde                inval_tss
                0x0000000000100c04                segment_not_present
                0x0000000000100c2a                stack_exception
                0x0000000000100c50                general_protection
                0x0000000000100c76                page_fault
                0x0000000000100c9c                copr_error
                0x0000000000100cd0                hwint00
                0x0000000000100cf0                hwint01
                0x0000000000100d10                hwint02
                0x0000000000100d30                hwint03
                0x0000000000100d50                hwint04
                0x0000000000100d70                hwint05
                0x0000000000100d90                hwint06
                0x0000000000100db0                hwint07
                0x0000000000100dd0                hwint08
                0x0000000000100e00                hwint09
                0x0000000000100e30                hwint10
                0x0000000000100e60                hwint11
                0x0000000000100e90                hwint12
                0x0000000000100ec0                hwint13
                0x0000000000100ef0                hwint14
                0x0000000000100f20                hwint15
                0x0000000000100f44                save
                0x0000000000100f93                restart
                0x0000000000100fb7                thread_sleep_self
                0x0000000000101004                KernelMain
                0x000000000010103c                main_thread
                0x00000000001010a2                main_thread_create
                0x00000000001011ed                mod_load
                0x0000000000101367                thread_create
                0x0000000000101590                thread_fork
                0x0000000000101690                thread_sleep
                0x00000000001016e9                thread_wake
                0x0000000000101767                thread_kill
                0x00000000001017e4                thread_schedule
                0x00000000001019ec                msg_send
                0x0000000000101ade                msg_handle
                0x0000000000101b5d                msg_register
                0x0000000000101ba7                msg_recv
                0x0000000000101c34                msg_post
                0x0000000000101c8c                idt_init
                0x0000000000101ffd                intr_handle
                0x0000000000102059                exception_handler
                0x00000000001020b0                mem_init
                0x00000000001021aa                page_init
                0x00000000001022d8                gdt_init
                0x00000000001023fd                tss_init
 .text          0x00000000001024a0      0x238 bin/lib.o
                0x00000000001024a0                memcpy
                0x00000000001024d8                list_init
                0x00000000001024f4                list_add
                0x0000000000102540                list_search
                0x0000000000102589                list_insert
                0x00000000001025f3                list_unlink
                0x000000000010262c                list_delete
                0x0000000000102666                list_empty
 *(.gnu.warning)

.fini
 *(.fini)
                0x00000000001026d8                PROVIDE (__etext, .)
                0x00000000001026d8                PROVIDE (_etext, .)
                0x00000000001026d8                PROVIDE (etext, .)

.rodata         0x00000000001026e0       0xe0
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000001026e0       0xe0 bin/micro-kernel.o
                0x0000000000102700                msg_priority_table

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame       0x00000000001027c0      0x99c
 *(.eh_frame)
 .eh_frame      0x00000000001027c0      0x480 bin/arch.o
                                        0x528 (size before relaxing)
 .eh_frame      0x0000000000102c40      0x41c bin/micro-kernel.o
                                        0x4ac (size before relaxing)
 .eh_frame      0x000000000010305c      0x100 bin/lib.o
                                        0x130 (size before relaxing)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x000000000010315c                . = (ALIGN (0x1000) - ((0x1000 - .) & 0xfff))
                0x000000000010415c                . = DATA_SEGMENT_ALIGN (0x1000, 0x1000)

.eh_frame
 *(.eh_frame)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x000000000010415c        0x0
                0x000000000010415c                PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                0x000000000010415c                PROVIDE (__preinit_array_end, .)

.init_array     0x000000000010415c        0x0
                0x000000000010415c                PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                0x000000000010415c                PROVIDE (__init_array_end, .)

.fini_array     0x000000000010415c        0x0
                0x000000000010415c                PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                0x000000000010415c                PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)
 *(.igot)
                0x000000000010415c                . = DATA_SEGMENT_RELRO_END (., 0xc)

.got.plt        0x000000000010415c        0x0
 *(.got.plt)
 *(.igot.plt)
 .igot.plt      0x0000000000000000        0x0 bin/arch.o

.data           0x000000000010415c       0x18
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x000000000010415c        0x0 bin/arch.o
 .data          0x000000000010415c       0x18 bin/micro-kernel.o
                0x000000000010415c                mod_table_data
                0x0000000000104168                msg_stack
 .data          0x0000000000104174        0x0 bin/lib.o

.data1
 *(.data1)
                0x0000000000104174                _edata = .
                0x0000000000104174                PROVIDE (edata, .)
                0x0000000000104174                __bss_start = .

.bss            0x0000000000104180     0x1d68
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000104180        0x4 bin/arch.o
 *fill*         0x0000000000104184       0x1c 00
 .bss           0x00000000001041a0       0x80 bin/micro-kernel.o
                0x00000000001041a0                mod_table
 .bss           0x0000000000104220        0x0 bin/lib.o
 *(COMMON)
 COMMON         0x0000000000104220      0x9e0 bin/arch.o
                0x0000000000104220                gdt_table
                0x0000000000104320                idt_ptr
                0x0000000000104340                tss
                0x00000000001043ac                gdt_ptr
                0x00000000001043b2                tss_sel
                0x00000000001043b4                ldt_ptr
                0x00000000001043c0                idt_table
                0x0000000000104bc0                ldt_table
 COMMON         0x0000000000104c00     0x12e8 bin/micro-kernel.o
                0x0000000000104c00                kernel_reenter
                0x0000000000104c20                msg_reg_table
                0x0000000000105e20                thread_sleep_id
                0x0000000000105e40                thread_table
                0x0000000000105ec0                thread_queue_ready
                0x0000000000105ec8                ret_addr
                0x0000000000105ecc                err_code
                0x0000000000105ed0                thread_queue_sleep
                0x0000000000105ed8                thread_run
                0x0000000000105edc                thread_run_stack_top
                0x0000000000105ee0                thread_table_data
                0x0000000000105ee4                kernel_stack_p
                0x0000000000105ee8                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x0000000000105ee8                . = ALIGN (0x4)
                0x0000000000105ee8                . = ALIGN (0x4)
                0x0000000000105ee8                _end = .
                0x0000000000105ee8                PROVIDE (end, .)
                0x0000000000105ee8                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2a
 *(.comment)
 .comment       0x0000000000000000       0x2a bin/arch.o
                                        0x158 (size before relaxing)
 .comment       0x0000000000000000      0x12d bin/micro-kernel.o
 .comment       0x0000000000000000       0x56 bin/lib.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(bin/kernel.bin elf32-i386)

memory          0x0000000000030000      0x210
 memory         0x0000000000030000      0x210 bin/arch.o
                0x0000000000030000                mem_info
                0x0000000000030200                mem_mcr_number
                0x0000000000030204                mem_size
                0x0000000000030208                mem_used_map
                0x000000000003020c                mem_used_map_max
